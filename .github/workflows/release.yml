name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v1
    - name: setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: npm install
      run: npm ci
    - name: build
      run: npm run build
    - name: test
      run: npm test
    - name: package
      run: |
        npm run package
        ls -l dist
    - name: archive binary (macOS)
      if: matrix.os == 'macOS-latest'
      uses: actions/upload-artifact@master
      with:
        name: ${{ github.ref }}-mac
        path: dist/veonim-${{ github.ref }}-mac.zip
    - name: archive binary (linux)
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@master
      with:
        name: ${{ github.ref }}-linux
        path: dist/veonim-${{ github.ref }}-linux.zip
    - name: archive binary (windows)
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@master
      with:
        name: ${{ github.ref }}-windows
        path: dist/veonim-${{ github.ref }}-win.zip

  release:

    runs-on: ubuntu-latest

    steps:
    - name: download binary MacOS
      uses: actions/download-artifact@master
      with:
        name: ${{ github.ref }}-mac
    - name: download binary Linux
      uses: actions/download-artifact@master
      with:
        name: ${{ github.ref }}-linux
    - name: download binary Windows
      uses: actions/download-artifact@master
      with:
        name: ${{ github.ref }}-windows
    - name: release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: true
        prerelease: true
    - name: upload release asset MacOS
      if: matrix.os == 'macOS-latest'
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.ref }}-mac
        asset_name: veonim-${{ github.ref }}-mac.zip
        asset_content_type: application/zip
    - name: upload release asset Linux
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.ref }}-linux
          asset_name: veonim-${{ github.ref }}-linux.zip
          asset_content_type: application/zip
    - name: upload release asset Windows
      if: matrix.os == 'windows-latest'
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.ref }}-windows
          asset_name: veonim-${{ github.ref }}-windows.zip
          asset_content_type: application/zip
